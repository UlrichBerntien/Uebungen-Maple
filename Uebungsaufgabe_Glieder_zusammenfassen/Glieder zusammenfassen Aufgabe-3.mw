<?xml version="1.0" encoding="UTF-8"?>
<Worksheet>
<Version major="14" minor="1"/>
<Label-Scheme value="2" prefix=""/>
<View-Properties presentation="false"><Zoom percentage="125"/></View-Properties>
<MapleNet-Properties elisiondigitsbefore="100" labelling="true" indentamount="4" elisiontermsthreshold="10000" ansi="false" errorbreak="1" useclientjvm="true" echo="1" imaginaryunit="I" labelwidth="20" plotdriver="opengl" elisiondigitsafter="100" plotoutput="terminal" helpbrowser="standard" rtablesize="10" elisiontermsbefore="100" elisiondigitsthreshold="10000" typesetting="standard" plotdevice="inline" verboseproc="1" showassumed="1" errorcursor="false" longdelim="true" plotoptions="" quiet="false" elisiontermsafter="100" screenwidth="79" preplot="" prettyprint="3" displayprecision="-1" warnlevel="3" screenheight="25" latexwidth="6.0" postplot="" prompt="&gt; " ShowLabels="true"/>
<Styles><Font name="Ordered List 1" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 2" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 3" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Ordered List 5" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Author" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Annotation Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Warning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Caption Reference" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input Placeholder" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[200,0,200]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="true"/>
<Font name="Maple Plot" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Code" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Line Printed Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text Output" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Diagnostic" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[40,120,40]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Inert Output" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[144,144,144]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Normal" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roma" foreground="[0,128,128]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Maple Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Dash Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Math" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Maple Input" background="[255,255,255]" bold="true" executable="true" family="Courier New" foreground="[255,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Output" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="2D Input" background="[255,255,255]" bold="false" executable="true" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkError" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Header and Footer" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="10" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Error" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[255,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Title" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 1" background="[255,255,255]" bold="true" executable="false" family="Times New Roma" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="18" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Text" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Bullet Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 4" background="[255,255,255]" bold="false" executable="false" family="Times New Roma" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Equation Label" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 3" background="[255,255,255]" bold="true" executable="false" family="Times New Roma" foreground="[0,0,0]" italic="true" opaque="false" readonly="false" size="14" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="Heading 2" background="[255,255,255]" bold="true" executable="false" family="Times New Roma" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="16" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="HyperlinkWarning" background="[255,255,255]" bold="false" executable="false" family="Courier New" foreground="[0,0,255]" italic="false" opaque="false" readonly="true" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Dictionary Hyperlink" background="[255,255,255]" bold="false" executable="false" family="Times New Roma" foreground="[147,0,15]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="true" placeholder="false"/>
<Font name="Caption Text" background="[255,255,255]" bold="true" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Font name="List Item" background="[255,255,255]" bold="false" executable="false" family="Times New Roman" foreground="[0,0,0]" italic="false" opaque="false" readonly="false" size="12" subscript="false" superscript="false" underline="false" placeholder="false"/>
<Layout name="Ordered List 1" alignment="left" bullet="numeric" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 2" alignment="left" bullet="alphabetic" firstindent="0" leftmargin="36" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 3" alignment="left" bullet="roman" firstindent="0" leftmargin="72" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 4" alignment="left" bullet="ALPHABETIC" firstindent="0" leftmargin="108" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Ordered List 5" alignment="left" bullet="ROMAN" firstindent="0" leftmargin="144" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="-1" bulletsuffix=""/>
<Layout name="Author" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="8" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Warning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Annotation Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Plot" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Line Printed Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Text Output" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="newline" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Diagnostic" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="any" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Normal" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Maple Output" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.3" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Dash Item" alignment="left" bullet="dash" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkError" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Error" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Title" alignment="centred" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="12" spacebelow="12" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 1" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="4" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Bullet Item" alignment="left" bullet="dot" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 4" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 3" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="Heading 2" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="8" spacebelow="2" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="HyperlinkWarning" alignment="left" bullet="none" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="0" spacebelow="0" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Layout name="List Item" alignment="left" bullet="indent" firstindent="0" leftmargin="0" rightmargin="0" linespacing="0.0" spaceabove="3" spacebelow="3" linebreak="space" pagebreak-before="false" initial="0" bulletsuffix=""/>
<Pencil-style name="Pencil 5" pen-color="[255,0,0]" pen-height="5.0" pen-width="5.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 4" pen-color="[0,0,255]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 3" pen-color="[0,0,0]" pen-height="3.0" pen-width="3.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 2" pen-color="[0,0,255]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Pencil-style name="Pencil 1" pen-color="[0,0,0]" pen-height="1.0" pen-width="1.0" pen-opacity="1.0"/>
<Highlighter-style name="Highlighter 2" pen-color="[255,204,0]" pen-height="14.0" pen-width="14.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 1" pen-color="[255,153,255]" pen-height="12.0" pen-width="8.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 4" pen-color="[0,255,255]" pen-height="32.0" pen-width="32.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 3" pen-color="[51,255,0]" pen-height="24.0" pen-width="24.0" pen-opacity="0.8"/>
<Highlighter-style name="Highlighter 5" pen-color="[255,255,0]" pen-height="48.0" pen-width="48.0" pen-opacity="0.8"/>
</Styles>
<Task-table>
    <Task-category name="&lt;default&gt;">
    </Task-category>
</Task-table>
<Task>
</Task>
<Group labelreference="L1" drawlabel="true">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">restart;</Text-field>
</Input>
</Group>
<Group labelreference="L2" drawlabel="true">
<Input>
<Text-field style="Text" layout="Normal">Im Blockschaltbild die Signale mit Namen X<Font subscript="true">1</Font> bis X<Font subscript="true">6</Font> bezeichnen. Das Eingangssignal ist X<Font subscript="true">1</Font>, das Ausgangssignal ist X<Font subscript="true">5</Font>.</Text-field>
</Input>
</Group>
<Group labelreference="L5" drawlabel="true">
<Text-field superscript="false" placeholder="false" executable="false" selection-placeholder="false" italic="false" size="12" bold="false" subscript="false" family="Times New Roman" opaque="false" underline="false" background="[255,255,255]" readonly="false" foreground="[0,0,0]" alignment="centred" firstindent="0" spacebelow="0" leftmargin="0" linespacing="0.0" initial="0" linebreak="space" rightmargin="0" bulletsuffix="" spaceabove="0" bullet="none" pagebreak-before="false"><Image height="203" width="486" zoomable="false" labelreference="L3" drawcaption="false" captionalignment="0" captionposition="1"><Drawing-Root>LSUlUk9PVEc2Jy0lKUJPVU5EU19YRzYjJCIiISEiIi0lKUJPVU5EU19ZR0YnLSUtQk9VTkRTX1dJRFRIRzYjJCIlZ1tGKi0lLkJPVU5EU19IRUlHSFRHNiMkIiVJP0YqLSUpQ0hJTERSRU5HNigtJS9URVhUX0NPTlRBSU5FUkc2KC0lL0xJTkVfVEhJQ0tORVNTRzYjJCIjNUYqLSUoU1BBVElBTEc2Ji0lJlRSQU5TRzYjLSUnVkVDVE9SRzYkRihGKC0lJ09SSUdJTkc2Iy0lJlBPSU5URzYkJCIkdiJGKiQiJDAmRiotJSZTQ0FMRUc2Iy1GSTYkRkBGQC0lKVJPVEFUSU9OR0YnLSUsRklYRURfV0lEVEhHNiMlJXRydWVHLSUtRklYRURfSEVJR0hUR0Zobi0lJURBVEFHNiU3JCQhIz9GKiQiJFMkRio3JCQiJCFSRiokIiRJJEYqJSdDTE9TRURHLSUqUEFSQUdSQVBIRzYjUVtjcENqeFVaWGgwTFdacFpXeGtJSE4xY0dWeWMyTnlhWEIwUFNKbVlXeHpaU0lnY0d4aFkyVm9iMnhrWlhJOUltWmhiSE5sSWlCbGVHVmpkWFJoWW14bFBTSm1ZV3h6WlNJZ2MyVnNaV04wYVc5dUxYQnNZV05sYUc5c1pHVnlQU0ptWVd4elpTSWdhWFJoYkdsalBTSm1ZV3h6WlNJZ2MybDZaVDBpTVRJaUlHSnZiR1E5SW1aaGJITmxJaUJ6ZFdKelkzSnBjSFE5SW1aaGJITmxJaUJtWVcxcGJIazlJbFJwYldWeklFNWxkeUJTYjIxaGJpSWdiM0JoY1hWbFBTSm1ZV3h6WlNJZ2RXNWtaWEpzYVc1bFBTSm1ZV3h6WlNJZ1ltRmphMmR5YjNWdVpEMGlXekkxTlN3eU5UVXNNalUxWFNJZ2NtVmhaRzl1YkhrOUltWmhiSE5sSWlCbWIzSmxaM0p2ZFc1a1BTSmJNQ3d3TERCZElpQmhiR2xuYm0xbGJuUTlJbXhsWm5RaUlHWnBjbk4wYVc1a1pXNTBQU0l3SWlCemNHRmpaV0psYkc5M1BTSXdJaUJzWldaMGJXRnlaMmx1UFNJd0lpQnNhVzVsYzNCaFkybHVaejBpTUM0d0lpQnBibWwwYVdGc1BTSXdJaUJzYVc1bFluSmxZV3M5SW5Od1lXTmxJaUJ5YVdkb2RHMWhjbWRwYmowaU1DSWdZblZzYkdWMGMzVm1abWw0UFNJaUlITndZV05sWVdKdmRtVTlJakFpSUdKMWJHeGxkRDBpYm05dVpTSWdjR0ZuWldKeVpXRnJMV0psWm05eVpUMGlabUZzYzJVaVBqeEdiMjUwSUhOMWNHVnljMk55YVhCMFBTSm1ZV3h6WlNJZ2NHeGhZMlZvYjJ4a1pYSTlJbVpoYkhObElpQmxlR1ZqZFhSaFlteGxQU0ptWVd4elpTSWdjMlZzWldOMGFXOXVMWEJzWVdObGFHOXNaR1Z5UFNKbVlXeHpaU0lnYVhSaGJHbGpQU0ptWVd4elpTSWdjMmw2WlQwaU1UZ2lJR0p2YkdROUltWmhiSE5sSWlCemRXSnpZM0pwY0hROUltWmhiSE5sSWlCbVlXMXBiSGs5SWxScGJXVnpJRTVsZHlCU2IyMWhiaUlnYjNCaGNYVmxQU0ptWVd4elpTSWdkVzVrWlhKc2FXNWxQU0ptWVd4elpTSWdZbUZqYTJkeWIzVnVaRDBpV3pJMU5Td3lOVFVzTWpVMVhTSWdjbVZoWkc5dWJIazlJbVpoYkhObElpQm1iM0psWjNKdmRXNWtQU0piTUN3d0xEQmRJajVZUEM5R2IyNTBQanhHYjI1MElITjFjR1Z5YzJOeWFYQjBQU0ptWVd4elpTSWdjR3hoWTJWb2IyeGtaWEk5SW1aaGJITmxJaUJsZUdWamRYUmhZbXhsUFNKbVlXeHpaU0lnYzJWc1pXTjBhVzl1TFhCc1lXTmxhRzlzWkdWeVBTSm1ZV3h6WlNJZ2FYUmhiR2xqUFNKbVlXeHpaU0lnYzJsNlpUMGlNVGdpSUdKdmJHUTlJbVpoYkhObElpQnpkV0p6WTNKcGNIUTlJblJ5ZFdVaUlHWmhiV2xzZVQwaVZHbHRaWE1nVG1WM0lGSnZiV0Z1SWlCdmNHRnhkV1U5SW1aaGJITmxJaUIxYm1SbGNteHBibVU5SW1aaGJITmxJaUJpWVdOclozSnZkVzVrUFNKYk1qVTFMREkxTlN3eU5UVmRJaUJ5WldGa2IyNXNlVDBpWm1Gc2MyVWlJR1p2Y21WbmNtOTFibVE5SWxzd0xEQXNNRjBpUGpFOEwwWnZiblErUEM5VVpYaDBMV1pwWld4a1BnPT02Ii1GOzYoRj0tRkM2JkZFLUZMNiMtRk82JCQiJSZHJUYqJCIkRCZGKkZVRlpGZm5Gam4tRl1vNiU3JCQiJT9URiokIiRnJEYqNyRGZ29GZ29GaW8tRltwNiNRW2NwQ2p4VVpYaDBMV1pwWld4a0lITjFjR1Z5YzJOeWFYQjBQU0ptWVd4elpTSWdjR3hoWTJWb2IyeGtaWEk5SW1aaGJITmxJaUJsZUdWamRYUmhZbXhsUFNKbVlXeHpaU0lnYzJWc1pXTjBhVzl1TFhCc1lXTmxhRzlzWkdWeVBTSm1ZV3h6WlNJZ2FYUmhiR2xqUFNKbVlXeHpaU0lnYzJsNlpUMGlNVElpSUdKdmJHUTlJbVpoYkhObElpQnpkV0p6WTNKcGNIUTlJbVpoYkhObElpQm1ZVzFwYkhrOUlsUnBiV1Z6SUU1bGR5QlNiMjFoYmlJZ2IzQmhjWFZsUFNKbVlXeHpaU0lnZFc1a1pYSnNhVzVsUFNKbVlXeHpaU0lnWW1GamEyZHliM1Z1WkQwaVd6STFOU3d5TlRVc01qVTFYU0lnY21WaFpHOXViSGs5SW1aaGJITmxJaUJtYjNKbFozSnZkVzVrUFNKYk1Dd3dMREJkSWlCaGJHbG5ibTFsYm5ROUlteGxablFpSUdacGNuTjBhVzVrWlc1MFBTSXdJaUJ6Y0dGalpXSmxiRzkzUFNJd0lpQnNaV1owYldGeVoybHVQU0l3SWlCc2FXNWxjM0JoWTJsdVp6MGlNQzR3SWlCcGJtbDBhV0ZzUFNJd0lpQnNhVzVsWW5KbFlXczlJbk53WVdObElpQnlhV2RvZEcxaGNtZHBiajBpTUNJZ1luVnNiR1YwYzNWbVptbDRQU0lpSUhOd1lXTmxZV0p2ZG1VOUlqQWlJR0oxYkd4bGREMGlibTl1WlNJZ2NHRm5aV0p5WldGckxXSmxabTl5WlQwaVptRnNjMlVpUGp4R2IyNTBJSE4xY0dWeWMyTnlhWEIwUFNKbVlXeHpaU0lnY0d4aFkyVm9iMnhrWlhJOUltWmhiSE5sSWlCbGVHVmpkWFJoWW14bFBTSm1ZV3h6WlNJZ2MyVnNaV04wYVc5dUxYQnNZV05sYUc5c1pHVnlQU0ptWVd4elpTSWdhWFJoYkdsalBTSm1ZV3h6WlNJZ2MybDZaVDBpTVRnaUlHSnZiR1E5SW1aaGJITmxJaUJ6ZFdKelkzSnBjSFE5SW1aaGJITmxJaUJtWVcxcGJIazlJbFJwYldWeklFNWxkeUJTYjIxaGJpSWdiM0JoY1hWbFBTSm1ZV3h6WlNJZ2RXNWtaWEpzYVc1bFBTSm1ZV3h6WlNJZ1ltRmphMmR5YjNWdVpEMGlXekkxTlN3eU5UVXNNalUxWFNJZ2NtVmhaRzl1YkhrOUltWmhiSE5sSWlCbWIzSmxaM0p2ZFc1a1BTSmJNQ3d3TERCZElqNVlQQzlHYjI1MFBqeEdiMjUwSUhOMWNHVnljMk55YVhCMFBTSm1ZV3h6WlNJZ2NHeGhZMlZvYjJ4a1pYSTlJbVpoYkhObElpQmxlR1ZqZFhSaFlteGxQU0ptWVd4elpTSWdjMlZzWldOMGFXOXVMWEJzWVdObGFHOXNaR1Z5UFNKbVlXeHpaU0lnYVhSaGJHbGpQU0ptWVd4elpTSWdjMmw2WlQwaU1UZ2lJR0p2YkdROUltWmhiSE5sSWlCemRXSnpZM0pwY0hROUluUnlkV1VpSUdaaGJXbHNlVDBpVkdsdFpYTWdUbVYzSUZKdmJXRnVJaUJ2Y0dGeGRXVTlJbVpoYkhObElpQjFibVJsY214cGJtVTlJbVpoYkhObElpQmlZV05yWjNKdmRXNWtQU0piTWpVMUxESTFOU3d5TlRWZElpQnlaV0ZrYjI1c2VUMGlabUZzYzJVaUlHWnZjbVZuY205MWJtUTlJbHN3TERBc01GMGlQalU4TDBadmJuUStQQzlVWlhoMExXWnBaV3hrUGc9PUZecC1GOzYoRj0tRkM2JkZFLUZMNiMtRk82JCQiJSYqPkYqJCIkMCpGKkZVRlpGZm5Gam4tRl1vNiU3JCQiJSs9RiokIiRTKEYqRmRvRmlvLUZbcDYjUVtjcENqeFVaWGgwTFdacFpXeGtJSE4xY0dWeWMyTnlhWEIwUFNKbVlXeHpaU0lnY0d4aFkyVm9iMnhrWlhJOUltWmhiSE5sSWlCbGVHVmpkWFJoWW14bFBTSm1ZV3h6WlNJZ2MyVnNaV04wYVc5dUxYQnNZV05sYUc5c1pHVnlQU0ptWVd4elpTSWdhWFJoYkdsalBTSm1ZV3h6WlNJZ2MybDZaVDBpTVRJaUlHSnZiR1E5SW1aaGJITmxJaUJ6ZFdKelkzSnBjSFE5SW1aaGJITmxJaUJtWVcxcGJIazlJbFJwYldWeklFNWxkeUJTYjIxaGJpSWdiM0JoY1hWbFBTSm1ZV3h6WlNJZ2RXNWtaWEpzYVc1bFBTSm1ZV3h6WlNJZ1ltRmphMmR5YjNWdVpEMGlXekkxTlN3eU5UVXNNalUxWFNJZ2NtVmhaRzl1YkhrOUltWmhiSE5sSWlCbWIzSmxaM0p2ZFc1a1BTSmJNQ3d3TERCZElpQmhiR2xuYm0xbGJuUTlJbXhsWm5RaUlHWnBjbk4wYVc1a1pXNTBQU0l3SWlCemNHRmpaV0psYkc5M1BTSXdJaUJzWldaMGJXRnlaMmx1UFNJd0lpQnNhVzVsYzNCaFkybHVaejBpTUM0d0lpQnBibWwwYVdGc1BTSXdJaUJzYVc1bFluSmxZV3M5SW5Od1lXTmxJaUJ5YVdkb2RHMWhjbWRwYmowaU1DSWdZblZzYkdWMGMzVm1abWw0UFNJaUlITndZV05sWVdKdmRtVTlJakFpSUdKMWJHeGxkRDBpYm05dVpTSWdjR0ZuWldKeVpXRnJMV0psWm05eVpUMGlabUZzYzJVaVBqeEdiMjUwSUhOMWNHVnljMk55YVhCMFBTSm1ZV3h6WlNJZ2NHeGhZMlZvYjJ4a1pYSTlJbVpoYkhObElpQmxlR1ZqZFhSaFlteGxQU0ptWVd4elpTSWdjMlZzWldOMGFXOXVMWEJzWVdObGFHOXNaR1Z5UFNKbVlXeHpaU0lnYVhSaGJHbGpQU0ptWVd4elpTSWdjMmw2WlQwaU1UZ2lJR0p2YkdROUltWmhiSE5sSWlCemRXSnpZM0pwY0hROUltWmhiSE5sSWlCbVlXMXBiSGs5SWxScGJXVnpJRTVsZHlCU2IyMWhiaUlnYjNCaGNYVmxQU0ptWVd4elpTSWdkVzVrWlhKc2FXNWxQU0ptWVd4elpTSWdZbUZqYTJkeWIzVnVaRDBpV3pJMU5Td3lOVFVzTWpVMVhTSWdjbVZoWkc5dWJIazlJbVpoYkhObElpQm1iM0psWjNKdmRXNWtQU0piTUN3d0xEQmRJajVZUEM5R2IyNTBQanhHYjI1MElITjFjR1Z5YzJOeWFYQjBQU0ptWVd4elpTSWdjR3hoWTJWb2IyeGtaWEk5SW1aaGJITmxJaUJsZUdWamRYUmhZbXhsUFNKbVlXeHpaU0lnYzJWc1pXTjBhVzl1TFhCc1lXTmxhRzlzWkdWeVBTSm1ZV3h6WlNJZ2FYUmhiR2xqUFNKbVlXeHpaU0lnYzJsNlpUMGlNVGdpSUdKdmJHUTlJbVpoYkhObElpQnpkV0p6WTNKcGNIUTlJblJ5ZFdVaUlHWmhiV2xzZVQwaVZHbHRaWE1nVG1WM0lGSnZiV0Z1SWlCdmNHRnhkV1U5SW1aaGJITmxJaUIxYm1SbGNteHBibVU5SW1aaGJITmxJaUJpWVdOclozSnZkVzVrUFNKYk1qVTFMREkxTlN3eU5UVmRJaUJ5WldGa2IyNXNlVDBpWm1Gc2MyVWlJR1p2Y21WbmNtOTFibVE5SWxzd0xEQXNNRjBpUGpNOEwwWnZiblErUEM5VVpYaDBMV1pwWld4a1BnPT1GXnAtRjs2KEY9LUZDNiZGRS1GTDYjLUZPNiQkIiVES0YqJCIkJikpRipGVUZaRmZuRmpuLUZdbzYlNyQkIiVJSUYqJCIkPyhGKkZkb0Zpby1GW3A2I1FbY3BDanhVWlhoMExXWnBaV3hrSUhOMWNHVnljMk55YVhCMFBTSm1ZV3h6WlNJZ2NHeGhZMlZvYjJ4a1pYSTlJbVpoYkhObElpQmxlR1ZqZFhSaFlteGxQU0ptWVd4elpTSWdjMlZzWldOMGFXOXVMWEJzWVdObGFHOXNaR1Z5UFNKbVlXeHpaU0lnYVhSaGJHbGpQU0ptWVd4elpTSWdjMmw2WlQwaU1USWlJR0p2YkdROUltWmhiSE5sSWlCemRXSnpZM0pwY0hROUltWmhiSE5sSWlCbVlXMXBiSGs5SWxScGJXVnpJRTVsZHlCU2IyMWhiaUlnYjNCaGNYVmxQU0ptWVd4elpTSWdkVzVrWlhKc2FXNWxQU0ptWVd4elpTSWdZbUZqYTJkeWIzVnVaRDBpV3pJMU5Td3lOVFVzTWpVMVhTSWdjbVZoWkc5dWJIazlJbVpoYkhObElpQm1iM0psWjNKdmRXNWtQU0piTUN3d0xEQmRJaUJoYkdsbmJtMWxiblE5SW14bFpuUWlJR1pwY25OMGFXNWtaVzUwUFNJd0lpQnpjR0ZqWldKbGJHOTNQU0l3SWlCc1pXWjBiV0Z5WjJsdVBTSXdJaUJzYVc1bGMzQmhZMmx1WnowaU1DNHdJaUJwYm1sMGFXRnNQU0l3SWlCc2FXNWxZbkpsWVdzOUluTndZV05sSWlCeWFXZG9kRzFoY21kcGJqMGlNQ0lnWW5Wc2JHVjBjM1ZtWm1sNFBTSWlJSE53WVdObFlXSnZkbVU5SWpBaUlHSjFiR3hsZEQwaWJtOXVaU0lnY0dGblpXSnlaV0ZyTFdKbFptOXlaVDBpWm1Gc2MyVWlQanhHYjI1MElITjFjR1Z5YzJOeWFYQjBQU0ptWVd4elpTSWdjR3hoWTJWb2IyeGtaWEk5SW1aaGJITmxJaUJsZUdWamRYUmhZbXhsUFNKbVlXeHpaU0lnYzJWc1pXTjBhVzl1TFhCc1lXTmxhRzlzWkdWeVBTSm1ZV3h6WlNJZ2FYUmhiR2xqUFNKbVlXeHpaU0lnYzJsNlpUMGlNVGdpSUdKdmJHUTlJbVpoYkhObElpQnpkV0p6WTNKcGNIUTlJbVpoYkhObElpQm1ZVzFwYkhrOUlsUnBiV1Z6SUU1bGR5QlNiMjFoYmlJZ2IzQmhjWFZsUFNKbVlXeHpaU0lnZFc1a1pYSnNhVzVsUFNKbVlXeHpaU0lnWW1GamEyZHliM1Z1WkQwaVd6STFOU3d5TlRVc01qVTFYU0lnY21WaFpHOXViSGs5SW1aaGJITmxJaUJtYjNKbFozSnZkVzVrUFNKYk1Dd3dMREJkSWo1WVBDOUdiMjUwUGp4R2IyNTBJSE4xY0dWeWMyTnlhWEIwUFNKbVlXeHpaU0lnY0d4aFkyVm9iMnhrWlhJOUltWmhiSE5sSWlCbGVHVmpkWFJoWW14bFBTSm1ZV3h6WlNJZ2MyVnNaV04wYVc5dUxYQnNZV05sYUc5c1pHVnlQU0ptWVd4elpTSWdhWFJoYkdsalBTSm1ZV3h6WlNJZ2MybDZaVDBpTVRnaUlHSnZiR1E5SW1aaGJITmxJaUJ6ZFdKelkzSnBjSFE5SW5SeWRXVWlJR1poYldsc2VUMGlWR2x0WlhNZ1RtVjNJRkp2YldGdUlpQnZjR0Z4ZFdVOUltWmhiSE5sSWlCMWJtUmxjbXhwYm1VOUltWmhiSE5sSWlCaVlXTnJaM0p2ZFc1a1BTSmJNalUxTERJMU5Td3lOVFZkSWlCeVpXRmtiMjVzZVQwaVptRnNjMlVpSUdadmNtVm5jbTkxYm1ROUlsc3dMREFzTUYwaVBqUThMMFp2Ym5RK1BDOVVaWGgwTFdacFpXeGtQZz09Rl5wLUY7NihGPS1GQzYmRkUtRkw2Iy1GTzYkJCIkdihGKiQiJCZlRipGVUZaRmZuRmpuLUZdbzYlNyQkIiQhZUYqJCIkPyVGKkZkb0Zpby1GW3A2I1FbY3BDanhVWlhoMExXWnBaV3hrSUhOMWNHVnljMk55YVhCMFBTSm1ZV3h6WlNJZ2NHeGhZMlZvYjJ4a1pYSTlJbVpoYkhObElpQmxlR1ZqZFhSaFlteGxQU0ptWVd4elpTSWdjMlZzWldOMGFXOXVMWEJzWVdObGFHOXNaR1Z5UFNKbVlXeHpaU0lnYVhSaGJHbGpQU0ptWVd4elpTSWdjMmw2WlQwaU1USWlJR0p2YkdROUltWmhiSE5sSWlCemRXSnpZM0pwY0hROUltWmhiSE5sSWlCbVlXMXBiSGs5SWxScGJXVnpJRTVsZHlCU2IyMWhiaUlnYjNCaGNYVmxQU0ptWVd4elpTSWdkVzVrWlhKc2FXNWxQU0ptWVd4elpTSWdZbUZqYTJkeWIzVnVaRDBpV3pJMU5Td3lOVFVzTWpVMVhTSWdjbVZoWkc5dWJIazlJbVpoYkhObElpQm1iM0psWjNKdmRXNWtQU0piTUN3d0xEQmRJaUJoYkdsbmJtMWxiblE5SW14bFpuUWlJR1pwY25OMGFXNWtaVzUwUFNJd0lpQnpjR0ZqWldKbGJHOTNQU0l3SWlCc1pXWjBiV0Z5WjJsdVBTSXdJaUJzYVc1bGMzQmhZMmx1WnowaU1DNHdJaUJwYm1sMGFXRnNQU0l3SWlCc2FXNWxZbkpsWVdzOUluTndZV05sSWlCeWFXZG9kRzFoY21kcGJqMGlNQ0lnWW5Wc2JHVjBjM1ZtWm1sNFBTSWlJSE53WVdObFlXSnZkbVU5SWpBaUlHSjFiR3hsZEQwaWJtOXVaU0lnY0dGblpXSnlaV0ZyTFdKbFptOXlaVDBpWm1Gc2MyVWlQanhHYjI1MElITjFjR1Z5YzJOeWFYQjBQU0ptWVd4elpTSWdjR3hoWTJWb2IyeGtaWEk5SW1aaGJITmxJaUJsZUdWamRYUmhZbXhsUFNKbVlXeHpaU0lnYzJWc1pXTjBhVzl1TFhCc1lXTmxhRzlzWkdWeVBTSm1ZV3h6WlNJZ2FYUmhiR2xqUFNKbVlXeHpaU0lnYzJsNlpUMGlNVGdpSUdKdmJHUTlJbVpoYkhObElpQnpkV0p6WTNKcGNIUTlJbVpoYkhObElpQm1ZVzFwYkhrOUlsUnBiV1Z6SUU1bGR5QlNiMjFoYmlJZ2IzQmhjWFZsUFNKbVlXeHpaU0lnZFc1a1pYSnNhVzVsUFNKbVlXeHpaU0lnWW1GamEyZHliM1Z1WkQwaVd6STFOU3d5TlRVc01qVTFYU0lnY21WaFpHOXViSGs5SW1aaGJITmxJaUJtYjNKbFozSnZkVzVrUFNKYk1Dd3dMREJkSWo1WVBDOUdiMjUwUGp4R2IyNTBJSE4xY0dWeWMyTnlhWEIwUFNKbVlXeHpaU0lnY0d4aFkyVm9iMnhrWlhJOUltWmhiSE5sSWlCbGVHVmpkWFJoWW14bFBTSm1ZV3h6WlNJZ2MyVnNaV04wYVc5dUxYQnNZV05sYUc5c1pHVnlQU0ptWVd4elpTSWdhWFJoYkdsalBTSm1ZV3h6WlNJZ2MybDZaVDBpTVRnaUlHSnZiR1E5SW1aaGJITmxJaUJ6ZFdKelkzSnBjSFE5SW5SeWRXVWlJR1poYldsc2VUMGlWR2x0WlhNZ1RtVjNJRkp2YldGdUlpQnZjR0Z4ZFdVOUltWmhiSE5sSWlCMWJtUmxjbXhwYm1VOUltWmhiSE5sSWlCaVlXTnJaM0p2ZFc1a1BTSmJNalUxTERJMU5Td3lOVFZkSWlCeVpXRmtiMjVzZVQwaVptRnNjMlVpSUdadmNtVm5jbTkxYm1ROUlsc3dMREFzTUYwaVBqSThMMFp2Ym5RK1BDOVVaWGgwTFdacFpXeGtQZz09Rl5wLUY7NihGPS1GQzYmRkUtRkw2Iy1GTzYkJCIlJmUiRiokIiUwOEYqRlVGWkZmbkZqbi1GXW82JTckJCIlIVIiRiokIiVTNkYqRmRvRmlvLUZbcDYjUVtjcENqeFVaWGgwTFdacFpXeGtJSE4xY0dWeWMyTnlhWEIwUFNKbVlXeHpaU0lnY0d4aFkyVm9iMnhrWlhJOUltWmhiSE5sSWlCbGVHVmpkWFJoWW14bFBTSm1ZV3h6WlNJZ2MyVnNaV04wYVc5dUxYQnNZV05sYUc5c1pHVnlQU0ptWVd4elpTSWdhWFJoYkdsalBTSm1ZV3h6WlNJZ2MybDZaVDBpTVRJaUlHSnZiR1E5SW1aaGJITmxJaUJ6ZFdKelkzSnBjSFE5SW1aaGJITmxJaUJtWVcxcGJIazlJbFJwYldWeklFNWxkeUJTYjIxaGJpSWdiM0JoY1hWbFBTSm1ZV3h6WlNJZ2RXNWtaWEpzYVc1bFBTSm1ZV3h6WlNJZ1ltRmphMmR5YjNWdVpEMGlXekkxTlN3eU5UVXNNalUxWFNJZ2NtVmhaRzl1YkhrOUltWmhiSE5sSWlCbWIzSmxaM0p2ZFc1a1BTSmJNQ3d3TERCZElpQmhiR2xuYm0xbGJuUTlJbXhsWm5RaUlHWnBjbk4wYVc1a1pXNTBQU0l3SWlCemNHRmpaV0psYkc5M1BTSXdJaUJzWldaMGJXRnlaMmx1UFNJd0lpQnNhVzVsYzNCaFkybHVaejBpTUM0d0lpQnBibWwwYVdGc1BTSXdJaUJzYVc1bFluSmxZV3M5SW5Od1lXTmxJaUJ5YVdkb2RHMWhjbWRwYmowaU1DSWdZblZzYkdWMGMzVm1abWw0UFNJaUlITndZV05sWVdKdmRtVTlJakFpSUdKMWJHeGxkRDBpYm05dVpTSWdjR0ZuWldKeVpXRnJMV0psWm05eVpUMGlabUZzYzJVaVBqeEdiMjUwSUhOMWNHVnljMk55YVhCMFBTSm1ZV3h6WlNJZ2NHeGhZMlZvYjJ4a1pYSTlJbVpoYkhObElpQmxlR1ZqZFhSaFlteGxQU0ptWVd4elpTSWdjMlZzWldOMGFXOXVMWEJzWVdObGFHOXNaR1Z5UFNKbVlXeHpaU0lnYVhSaGJHbGpQU0ptWVd4elpTSWdjMmw2WlQwaU1UZ2lJR0p2YkdROUltWmhiSE5sSWlCemRXSnpZM0pwY0hROUltWmhiSE5sSWlCbVlXMXBiSGs5SWxScGJXVnpJRTVsZHlCU2IyMWhiaUlnYjNCaGNYVmxQU0ptWVd4elpTSWdkVzVrWlhKc2FXNWxQU0ptWVd4elpTSWdZbUZqYTJkeWIzVnVaRDBpV3pJMU5Td3lOVFVzTWpVMVhTSWdjbVZoWkc5dWJIazlJbVpoYkhObElpQm1iM0psWjNKdmRXNWtQU0piTUN3d0xEQmRJajVZUEM5R2IyNTBQanhHYjI1MElITjFjR1Z5YzJOeWFYQjBQU0ptWVd4elpTSWdjR3hoWTJWb2IyeGtaWEk5SW1aaGJITmxJaUJsZUdWamRYUmhZbXhsUFNKbVlXeHpaU0lnYzJWc1pXTjBhVzl1TFhCc1lXTmxhRzlzWkdWeVBTSm1ZV3h6WlNJZ2FYUmhiR2xqUFNKbVlXeHpaU0lnYzJsNlpUMGlNVGdpSUdKdmJHUTlJbVpoYkhObElpQnpkV0p6WTNKcGNIUTlJblJ5ZFdVaUlHWmhiV2xzZVQwaVZHbHRaWE1nVG1WM0lGSnZiV0Z1SWlCdmNHRnhkV1U5SW1aaGJITmxJaUIxYm1SbGNteHBibVU5SW1aaGJITmxJaUJpWVdOclozSnZkVzVrUFNKYk1qVTFMREkxTlN3eU5UVmRJaUJ5WldGa2IyNXNlVDBpWm1Gc2MyVWlJR1p2Y21WbmNtOTFibVE5SWxzd0xEQXNNRjBpUGpZOEwwWnZiblErUEM5VVpYaDBMV1pwWld4a1BnPT1GXnA=</Drawing-Root></Image></Text-field>
</Group>
<Group labelreference="L13" drawlabel="true">
<Input>
<Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Alle \303\234bertragungsglieder sind linear, werden beschrieben durch \303\234bertragungsfunktionen F. Ist X das Eingangssignal in ein Glied, so ist </Font><Equation executable="false" style="Text" input-equation="" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2JVEiRkYnLyUnaXRhbGljR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictSSNtb0dGJDYtUScmc2RvdDtGJ0YyLyUmZmVuY2VHRjEvJSpzZXBhcmF0b3JHRjEvJSlzdHJldGNoeUdGMS8lKnN5bW1ldHJpY0dGMS8lKGxhcmdlb3BHRjEvJS5tb3ZhYmxlbGltaXRzR0YxLyUnYWNjZW50R0YxLyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGSS1GLDYlUSJYRidGL0YyLUY2Ni1RIn5GJ0YyRjlGO0Y9Rj9GQUZDRkVGR0ZKRjI=">LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYnLUkjbWlHRiQ2JVEiRkYnLyUnaXRhbGljR1EmZmFsc2VGJy8lLG1hdGh2YXJpYW50R1Enbm9ybWFsRictSSNtb0dGJDYtUScmc2RvdDtGJ0YyLyUmZmVuY2VHRjEvJSpzZXBhcmF0b3JHRjEvJSlzdHJldGNoeUdGMS8lKnN5bW1ldHJpY0dGMS8lKGxhcmdlb3BHRjEvJS5tb3ZhYmxlbGltaXRzR0YxLyUnYWNjZW50R0YxLyUnbHNwYWNlR1EmMC4wZW1GJy8lJ3JzcGFjZUdGSS1GLDYlUSJYRidGL0YyLUY2Ni1RIn5GJ0YyRjlGO0Y9Rj9GQUZDRkVGR0ZKRjI=</Equation><Font encoding="UTF-8">das Ausgangssignal. Die \303\234bertragungsfunktionen F und die Signale X sind Funktionen der komplexen Frequenz s, also ausf\303\274hrlich als F(s) und X(s) geschrieben.</Font></Text-field>
<Text-field style="Text" layout="Normal"></Text-field>
<Text-field style="Text" layout="Normal">Die Gleichungen aus dem Blockschaltbild heraus aufstellen. </Text-field>
</Input>
</Group>
<Group labelreference="L14" drawlabel="true">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">X[2] = X[1]-X[6];</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiMkYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1GIzYmLUYsNiVGLi1GIzYmLUY7NiRRIjFGJ0Y+RkBGQ0Y+RkYtRko2LVEoJm1pbnVzO0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RLDAuMjIyMjIyMmVtRicvRmluRmdvLUYsNiVGLi1GIzYmLUY7NiRRIjZGJ0Y+RkBGQ0Y+RkZGPkZARkNGPg==">LyZJIlhHNiI2IyIiIywmJkYkNiMiIiJGKyZGJDYjIiInISIi</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L15" drawlabel="true">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">X[3] = X[2]-F[2]*X[4];</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiM0YnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1GIzYmLUYsNiVGLi1GIzYmLUY7NiRRIjJGJ0Y+RkBGQ0Y+RkYtRko2LVEoJm1pbnVzO0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RLDAuMjIyMjIyMmVtRicvRmluRmdvLUYjNiYtRiw2JS1GLzYlUSJGRidGMkY1Rl5vRkYtRko2LVExJkludmlzaWJsZVRpbWVzO0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RJjAuMGVtRicvRmluRmRwLUYsNiVGLi1GIzYmLUY7NiRRIjRGJ0Y+RkBGQ0Y+RkZGPkY+RkBGQ0Y+">LyZJIlhHNiI2IyIiJCwmJkYkNiMiIiMiIiIqJiZJIkZHRiVGKkYsJkYkNiMiIiVGLCEiIg==</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L16" drawlabel="true">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">X[4] = F[1]*X[3]-F[4]*X[5];</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNEYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1GIzYmLUYjNiYtRiw2JS1GLzYlUSJGRidGMkY1LUYjNiYtRjs2JFEiMUYnRj5GQEZDRj5GRi1GSjYtUTEmSW52aXNpYmxlVGltZXM7RidGPkZNRk9GUUZTRlVGV0ZZL0ZmblEmMC4wZW1GJy9GaW5GXHAtRiw2JUYuLUYjNiYtRjs2JFEiM0YnRj5GQEZDRj5GRkY+LUZKNi1RKCZtaW51cztGJ0Y+Rk1GT0ZRRlNGVUZXRlkvRmZuUSwwLjIyMjIyMjJlbUYnL0ZpbkZpcC1GIzYmLUYsNiVGYG9GOEZGRmhvLUYsNiVGLi1GIzYmLUY7NiRRIjVGJ0Y+RkBGQ0Y+RkZGPkY+RkBGQ0Y+">LyZJIlhHNiI2IyIiJSwmKiYmSSJGR0YlNiMiIiJGLSZGJDYjIiIkRi1GLSomJkYrRiZGLSZGJDYjIiImRi0hIiI=</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L17" drawlabel="true">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">X[5] = F[3]*X[4];</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNUYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1GIzYmLUYsNiUtRi82JVEiRkYnRjJGNS1GIzYmLUY7NiRRIjNGJ0Y+RkBGQ0Y+RkYtRko2LVExJkludmlzaWJsZVRpbWVzO0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RJjAuMGVtRicvRmluRmpvLUYsNiVGLi1GIzYmLUY7NiRRIjRGJ0Y+RkBGQ0Y+RkZGPkZARkNGPg==">LyZJIlhHNiI2IyIiJiomJkkiRkdGJTYjIiIkIiIiJkYkNiMiIiVGLQ==</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L18" drawlabel="true">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">X[6] = X[5] - F[5]*X[6];</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNkYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1GIzYmLUYsNiVGLi1GIzYmLUY7NiRRIjVGJ0Y+RkBGQ0Y+RkYtRko2LVEoJm1pbnVzO0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RLDAuMjIyMjIyMmVtRicvRmluRmdvLUYjNiYtRiw2JS1GLzYlUSJGRidGMkY1Rl5vRkYtRko2LVExJkludmlzaWJsZVRpbWVzO0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RJjAuMGVtRicvRmluRmRwRitGPkY+RkBGQ0Y+">LyZJIlhHNiI2IyIiJywmJkYkNiMiIiYiIiIqJiZJIkZHRiVGKkYsRiNGLCEiIg==</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L19" drawlabel="true">
<Input>
<Text-field style="Text" layout="Normal">Die Gleichungen <Label label="L14" view="label" executable="false"></Label> bis <Label label="L18" view="label" executable="false"></Label><Font encoding="UTF-8"> bilden ein lineares Gleichungssystem. Aus diesem Gleichungssystem ist die \303\234bertragungsfunktion des Gesamtsystems, also eine Funktion X</Font><Font subscript="true">1</Font><Font encoding="UTF-8"> \342\206\246 X</Font><Font subscript="true">5</Font> zu bestimmen.</Text-field>
<Text-field style="Text" layout="Normal">Gleichung <Label label="L18" view="label" executable="false"></Label> nach X<Font subscript="true">5</Font><Font encoding="UTF-8"> aufl\303\266sen.</Font></Text-field>
</Input>
</Group>
<Group labelreference="L23" drawlabel="true">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">collect(isolate(<Label label="L18" view="label" executable="true"></Label>,X[5]),X[6]);</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNUYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1GIzYmLUkobWZlbmNlZEdGJDYkLUYjNiYtRjs2JFEiMUYnRj4tRko2LVEiK0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RLDAuMjIyMjIyMmVtRicvRmluRmhvLUYsNiUtRi82JVEiRkYnRjJGNUY4RkZGPkY+LUZKNi1RMSZJbnZpc2libGVUaW1lcztGJ0Y+Rk1GT0ZRRlNGVUZXRlkvRmZuUSYwLjBlbUYnL0ZpbkZjcC1GLDYlRi4tRiM2Ji1GOzYkUSI2RidGPkZARkNGPkZGRj5GQEZDRj4=">LyZJIlhHNiI2IyIiJiomLCYiIiJGKiZJIkZHRiVGJkYqRiomRiQ2IyIiJ0Yq</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L24" drawlabel="true">
<Input>
<Text-field style="Text" layout="Normal">Gleichung <Label label="L14" view="label" executable="false"></Label> nach X<Font subscript="true">6</Font><Font encoding="UTF-8"> aufl\303\266sen und in <Label label="L23" view="label" executable="false"></Label></Font> einsetzen.</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">isolate(<Label label="L14" view="label" executable="true"></Label>,X[6]);</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNkYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1GIzYnLUZKNi1RKiZ1bWludXMwO0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RLDAuMjIyMjIyMmVtRicvRmluRmBvLUYsNiVGLi1GIzYmLUY7NiRRIjJGJ0Y+RkBGQ0Y+RkYtRko2LVEiK0YnRj5GTUZPRlFGU0ZVRldGWUZfb0Zhby1GLDYlRi4tRiM2Ji1GOzYkUSIxRidGPkZARkNGPkZGRj5GQEZDRj4=">LyZJIlhHNiI2IyIiJywmJkYkNiMiIiMhIiImRiQ2IyIiIkYv</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L25" drawlabel="true">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">subs(<Label label="L24" view="label" executable="true"></Label>,<Label label="L23" view="label" executable="true"></Label>);</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNUYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1GIzYmLUkobWZlbmNlZEdGJDYkLUYjNiYtRjs2JFEiMUYnRj4tRko2LVEiK0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RLDAuMjIyMjIyMmVtRicvRmluRmhvLUYsNiUtRi82JVEiRkYnRjJGNUY4RkZGPkY+LUZKNi1RMSZJbnZpc2libGVUaW1lcztGJ0Y+Rk1GT0ZRRlNGVUZXRlkvRmZuUSYwLjBlbUYnL0ZpbkZjcC1GXW82JC1GIzYnLUZKNi1RKiZ1bWludXMwO0YnRj5GTUZPRlFGU0ZVRldGWUZnb0Zpby1GLDYlRi4tRiM2Ji1GOzYkUSIyRidGPkZARkNGPkZGRmRvLUYsNiVGLi1GIzYmRmFvRkBGQ0Y+RkZGPkY+Rj5GQEZDRj4=">LyZJIlhHNiI2IyIiJiomLCYiIiJGKiZJIkZHRiVGJkYqRiosJiZGJDYjIiIjISIiJkYkNiNGKkYqRio=</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L26" drawlabel="true">
<Input>
<Text-field style="Text" layout="Normal">Gleichung <Label label="L17" view="label" executable="false"></Label><Font encoding="UTF-8"> aufl\303\266sen nach X</Font><Font subscript="true">4</Font> und in <Label label="L15" view="label" executable="false"></Label> und <Label label="L16" view="label" executable="false"></Label> einsetzen.</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">isolate(<Label label="L17" view="label" executable="true"></Label>,X[4]);</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNEYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1JJm1mcmFjR0YkNigtRiM2Ji1GLDYlRi4tRiM2Ji1GOzYkUSI1RidGPkZARkNGPkZGRkBGQ0Y+LUYjNiYtRiw2JS1GLzYlUSJGRidGMkY1LUYjNiYtRjs2JFEiM0YnRj5GQEZDRj5GRkZARkNGPi8lLmxpbmV0aGlja25lc3NHUSIxRicvJStkZW5vbWFsaWduR1EnY2VudGVyRicvJSludW1hbGlnbkdGZ3AvJSliZXZlbGxlZEdGRUZARkNGPg==">LyZJIlhHNiI2IyIiJSomJkYkNiMiIiYiIiImSSJGR0YlNiMiIiQhIiI=</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L27" drawlabel="true">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">subs(<Label label="L26" view="label" executable="true"></Label>,<Label label="L15" view="label" executable="true"></Label>);</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiM0YnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1GIzYmLUYsNiVGLi1GIzYmLUY7NiRRIjJGJ0Y+RkBGQ0Y+RkYtRko2LVEoJm1pbnVzO0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RLDAuMjIyMjIyMmVtRicvRmluRmdvLUkmbWZyYWNHRiQ2KC1GIzYoLUYsNiUtRi82JVEiRkYnRjJGNUZeb0ZGLUZKNi1RMSZJbnZpc2libGVUaW1lcztGJ0Y+Rk1GT0ZRRlNGVUZXRlkvRmZuUSYwLjBlbUYnL0ZpbkZncC1GLDYlRi4tRiM2Ji1GOzYkUSI1RidGPkZARkNGPkZGRkBGQ0Y+LUYjNiYtRiw2JUZgcEY4RkZGQEZDRj4vJS5saW5ldGhpY2tuZXNzR1EiMUYnLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmlxLyUpYmV2ZWxsZWRHRkVGPkZARkNGPg==">LyZJIlhHNiI2IyIiJCwmJkYkNiMiIiMiIiIqKCZJIkZHRiVGKkYsJkYkNiMiIiZGLCZGL0YmISIiRjQ=</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L28" drawlabel="true">
<Input>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">subs(<Label label="L26" view="label" executable="true"></Label>,<Label label="L16" view="label" executable="true"></Label>);</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkmbWZyYWNHRiQ2KC1GIzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNUYnL0Y7USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGQy8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnRkVGSEZDLUYjNiYtRjE2JS1GNDYlUSJGRidGN0Y6LUYjNiYtRkA2JFEiM0YnRkNGRUZIRkNGS0ZFRkhGQy8lLmxpbmV0aGlja25lc3NHUSIxRicvJStkZW5vbWFsaWduR1EnY2VudGVyRicvJSludW1hbGlnbkdGaW4vJSliZXZlbGxlZEdGSi1JI21vR0YkNi1RIj1GJ0ZDLyUmZmVuY2VHRkovJSpzZXBhcmF0b3JHRkovJSlzdHJldGNoeUdGSi8lKnN5bW1ldHJpY0dGSi8lKGxhcmdlb3BHRkovJS5tb3ZhYmxlbGltaXRzR0ZKLyUnYWNjZW50R0ZKLyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGYnAtRiM2Ji1GIzYmLUYxNiVGUi1GIzYmLUZANiRGZm5GQ0ZFRkhGQ0ZLLUZfbzYtUTEmSW52aXNpYmxlVGltZXM7RidGQ0Zib0Zkb0Zmb0Zob0Zqb0ZccEZecC9GYXBRJjAuMGVtRicvRmRwRmNxLUYxNiVGM0ZVRktGQy1GX282LVEoJm1pbnVzO0YnRkNGYm9GZG9GZm9GaG9Gam9GXHBGXnAvRmFwUSwwLjIyMjIyMjJlbUYnL0ZkcEZbci1GIzYmLUYxNiVGUi1GIzYmLUZANiRRIjRGJ0ZDRkVGSEZDRktGX3FGMEZDRkNGRUZIRkM=">LyomJkkiWEc2IjYjIiImIiIiJkkiRkdGJjYjIiIkISIiLCYqJiZGKzYjRilGKSZGJUYsRilGKSomJkYrNiMiIiVGKUYkRilGLg==</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L29" drawlabel="true">
<Input>
<Text-field style="Text" layout="Normal">Gleichung <Label label="L27" view="label" executable="false"></Label> einsetzen in <Label label="L28" view="label" executable="false"></Label>.</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">subs(<Label label="L27" view="label" executable="true"></Label>,<Label label="L28" view="label" executable="true"></Label>);</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUkmbWZyYWNHRiQ2KC1GIzYmLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNUYnL0Y7USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGQy8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnRkVGSEZDLUYjNiYtRjE2JS1GNDYlUSJGRidGN0Y6LUYjNiYtRkA2JFEiM0YnRkNGRUZIRkNGS0ZFRkhGQy8lLmxpbmV0aGlja25lc3NHUSIxRicvJStkZW5vbWFsaWduR1EnY2VudGVyRicvJSludW1hbGlnbkdGaW4vJSliZXZlbGxlZEdGSi1JI21vR0YkNi1RIj1GJ0ZDLyUmZmVuY2VHRkovJSpzZXBhcmF0b3JHRkovJSlzdHJldGNoeUdGSi8lKnN5bW1ldHJpY0dGSi8lKGxhcmdlb3BHRkovJS5tb3ZhYmxlbGltaXRzR0ZKLyUnYWNjZW50R0ZKLyUnbHNwYWNlR1EsMC4yNzc3Nzc4ZW1GJy8lJ3JzcGFjZUdGYnAtRiM2Ji1GIzYmLUYxNiVGUi1GIzYmLUZANiRGZm5GQ0ZFRkhGQ0ZLLUZfbzYtUTEmSW52aXNpYmxlVGltZXM7RidGQ0Zib0Zkb0Zmb0Zob0Zqb0ZccEZecC9GYXBRJjAuMGVtRicvRmRwRmNxLUkobWZlbmNlZEdGJDYkLUYjNiYtRjE2JUYzLUYjNiYtRkA2JFEiMkYnRkNGRUZIRkNGSy1GX282LVEoJm1pbnVzO0YnRkNGYm9GZG9GZm9GaG9Gam9GXHBGXnAvRmFwUSwwLjIyMjIyMjJlbUYnL0ZkcEZlci1GLDYoLUYjNigtRjE2JUZSRlxyRktGX3FGMEZFRkhGQ0ZORlpGZ25Gam5GXG9GQ0ZDRkNGYXItRiM2Ji1GMTYlRlItRiM2Ji1GQDYkUSI0RidGQ0ZFRkhGQ0ZLRl9xRjBGQ0ZDRkVGSEZD">LyomJkkiWEc2IjYjIiImIiIiJkkiRkdGJjYjIiIkISIiLCYqJiZGKzYjRilGKSwmJkYlNiMiIiNGKSooJkYrRjVGKUYkRilGKkYuRi5GKUYpKiYmRis2IyIiJUYpRiRGKUYu</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L30" drawlabel="true">
<Input>
<Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Aufl\303\266sen nach X</Font><Font subscript="true">2</Font>.</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">solve(<Label label="L29" view="label" executable="true"></Label>,{X[2]})[1];</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiMkYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1JJm1mcmFjR0YkNigtRiM2KC1JKG1mZW5jZWRHRiQ2JC1GIzYoLUY7NiRRIjFGJ0Y+LUZKNi1RIitGJ0Y+Rk1GT0ZRRlNGVUZXRlkvRmZuUSwwLjIyMjIyMjJlbUYnL0ZpbkZbcC1GIzYmLUYsNiUtRi82JVEiRkYnRjJGNS1GIzYmLUY7NiRRIjRGJ0Y+RkBGQ0Y+RkYtRko2LVExJkludmlzaWJsZVRpbWVzO0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RJjAuMGVtRicvRmluRl1xLUYsNiVGYXAtRiM2Ji1GOzYkUSIzRidGPkZARkNGPkZGRj5GZ28tRiM2Ji1GLDYlRmFwRjhGRkZpcC1GLDYlRmFwLUYjNiZGZG9GQEZDRj5GRkY+Rj5GPkZpcC1GLDYlRi4tRiM2Ji1GOzYkUSI1RidGPkZARkNGPkZGRkBGQ0Y+LUYjNihGX3FGaXBGanFGQEZDRj4vJS5saW5ldGhpY2tuZXNzR0Zmby8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Zbcy8lKWJldmVsbGVkR0ZFRkBGQ0Y+">LyZJIlhHNiI2IyIiIyoqLCgiIiJGKiomJkkiRkdGJTYjIiIlRiomRi02IyIiJEYqRioqJiZGLUYmRiomRi02I0YqRipGKkYqJkYkNiMiIiZGKkYwISIiRjVGOg==</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L31" drawlabel="true">
<Input>
<Text-field style="Text" layout="Normal">Gleichung <Label label="L30" view="label" executable="false"></Label> einsetzen in <Label label="L25" view="label" executable="false"></Label>.</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">subs(<Label label="L30" view="label" executable="true"></Label>,<Label label="L25" view="label" executable="true"></Label>);</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNUYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1GIzYmLUkobWZlbmNlZEdGJDYkLUYjNiYtRjs2JFEiMUYnRj4tRko2LVEiK0YnRj5GTUZPRlFGU0ZVRldGWS9GZm5RLDAuMjIyMjIyMmVtRicvRmluRmhvLUYsNiUtRi82JVEiRkYnRjJGNUY4RkZGPkY+LUZKNi1RMSZJbnZpc2libGVUaW1lcztGJ0Y+Rk1GT0ZRRlNGVUZXRlkvRmZuUSYwLjBlbUYnL0ZpbkZjcC1GXW82JC1GIzYnLUZKNi1RKiZ1bWludXMwO0YnRj5GTUZPRlFGU0ZVRldGWUZnb0Zpby1JJm1mcmFjR0YkNigtRiM2KC1GXW82JC1GIzYoRmFvRmRvLUYjNiYtRiw2JUZccC1GIzYmLUY7NiRRIjRGJ0Y+RkBGQ0Y+RkZGX3AtRiw2JUZccC1GIzYmLUY7NiRRIjNGJ0Y+RkBGQ0Y+RkZGPkZkby1GIzYmLUYsNiVGXHAtRiM2Ji1GOzYkUSIyRidGPkZARkNGPkZGRl9wLUYsNiVGXHAtRiM2JkZhb0ZARkNGPkZGRj5GPkY+Rl9wRitGQEZDRj4tRiM2KEZeckZfcEZec0ZARkNGPi8lLmxpbmV0aGlja25lc3NHRmNvLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmhzLyUpYmV2ZWxsZWRHRkVGZG8tRiw2JUYuRmBzRkZGPkY+Rj5GQEZDRj4=">LyZJIlhHNiI2IyIiJiomLCYiIiJGKiZJIkZHRiVGJkYqRiosJioqLChGKkYqKiYmRiw2IyIiJUYqJkYsNiMiIiRGKkYqKiYmRiw2IyIiI0YqJkYsNiNGKkYqRipGKkYjRipGNCEiIkY7Rj1GPSZGJEY8RipGKg==</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L32" drawlabel="true">
<Input>
<Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Aufl\303\266sen nach X</Font><Font subscript="true">5</Font>.</Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">solve(<Label label="L31" view="label" executable="true"></Label>,{X[5]})[1];</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiWEYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUkjbW5HRiQ2JFEiNUYnL0Y2USdub3JtYWxGJy8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRidGPi8lL3N1YnNjcmlwdHNoaWZ0R1EiMEYnLUkjbW9HRiQ2LVEiPUYnRj4vJSZmZW5jZUdGRS8lKnNlcGFyYXRvckdGRS8lKXN0cmV0Y2h5R0ZFLyUqc3ltbWV0cmljR0ZFLyUobGFyZ2VvcEdGRS8lLm1vdmFibGVsaW1pdHNHRkUvJSdhY2NlbnRHRkUvJSdsc3BhY2VHUSwwLjI3Nzc3NzhlbUYnLyUncnNwYWNlR0Znbi1JJm1mcmFjR0YkNigtRiM2LC1JKG1mZW5jZWRHRiQ2JC1GIzYmLUY7NiRRIjFGJ0Y+LUZKNi1RIitGJ0Y+Rk1GT0ZRRlNGVUZXRlkvRmZuUSwwLjIyMjIyMjJlbUYnL0ZpbkZbcC1GLDYlLUYvNiVRIkZGJ0YyRjVGOEZGRj5GPi1GSjYtUTEmSW52aXNpYmxlVGltZXM7RidGPkZNRk9GUUZTRlVGV0ZZL0ZmblEmMC4wZW1GJy9GaW5GZnAtRiw2JUYuLUYjNiZGZG9GQEZDRj5GRkZicC1GLDYlRl9wLUYjNiYtRjs2JFEiM0YnRj5GQEZDRj5GRkZicC1GLDYlRl9wRmpwRkZGQEZDRj4tRiM2Ji1GIzYwRmRvRmdvLUYjNiYtRiw2JUZfcC1GIzYmLUY7NiRRIjRGJ0Y+RkBGQ0Y+RkZGYnBGXHFGPkZnby1GIzYmLUYsNiVGX3AtRiM2Ji1GOzYkUSIyRidGPkZARkNGPkZGRmJwRmNxRj5GZ29GXXBGZ28tRiM2KEZdcEZicEZbckZicEZccUY+RmdvLUYjNihGXXBGYnBGZHJGYnBGY3FGPkZnby1GIzYmRlxxRmJwRmNxRj5GPkZARkNGPi8lLmxpbmV0aGlja25lc3NHRmZvLyUrZGVub21hbGlnbkdRJ2NlbnRlckYnLyUpbnVtYWxpZ25HRmVzLyUpYmV2ZWxsZWRHRkVGQEZDRj4=">LyZJIlhHNiI2IyIiJiosLCYiIiJGKiZJIkZHRiVGJkYqRiomRiQ2I0YqRiosMEYqRioqJiZGLDYjIiIlRiomRiw2IyIiJEYqRioqJiZGLDYjIiIjRiomRixGLkYqRipGK0YqKihGK0YqRjFGKkY0RipGKiooRitGKkY4RipGO0YqRioqJkY0RipGO0YqRiohIiJGNEYqRjtGKg==</Equation></Text-field>
</Output>
</Group>
<Group labelreference="L33" drawlabel="true">
<Input>
<Text-field style="Text" layout="Normal"><Font encoding="UTF-8">Die Gesamt\303\274bertragungsfunktion ist</Font></Text-field>
<Text-field prompt="&gt; " style="Maple Input" layout="Normal">F[ges] = coeff(rhs(<Label label="L32" view="label" executable="true"></Label>),X[1]);</Text-field>
</Input>
<Output>
<Text-field style="2D Output" layout="Maple Output"><Equation executable="false" style="2D Output" display="LUklbXJvd0c2Iy9JK21vZHVsZW5hbWVHNiJJLFR5cGVzZXR0aW5nR0koX3N5c2xpYkdGJzYoLUklbXN1YkdGJDYlLUkjbWlHRiQ2JVEiRkYnLyUnaXRhbGljR1EldHJ1ZUYnLyUsbWF0aHZhcmlhbnRHUSdpdGFsaWNGJy1GIzYmLUYvNiVRJGdlc0YnRjJGNS8lK2ZvcmVncm91bmRHUShbMCwwLDBdRicvJSlyZWFkb25seUdRJmZhbHNlRicvRjZRJ25vcm1hbEYnLyUvc3Vic2NyaXB0c2hpZnRHUSIwRictSSNtb0dGJDYtUSI9RidGQy8lJmZlbmNlR0ZCLyUqc2VwYXJhdG9yR0ZCLyUpc3RyZXRjaHlHRkIvJSpzeW1tZXRyaWNHRkIvJShsYXJnZW9wR0ZCLyUubW92YWJsZWxpbWl0c0dGQi8lJ2FjY2VudEdGQi8lJ2xzcGFjZUdRLDAuMjc3Nzc3OGVtRicvJSdyc3BhY2VHRmZuLUkmbWZyYWNHRiQ2KC1GIzYqLUkobWZlbmNlZEdGJDYkLUYjNiYtSSNtbkdGJDYkUSIxRidGQy1GSTYtUSIrRidGQ0ZMRk5GUEZSRlRGVkZYL0ZlblEsMC4yMjIyMjIyZW1GJy9GaG5GW3AtRiw2JUYuLUYjNiYtRmRvNiRRIjVGJ0ZDRj1GQEZDRkVGQ0ZDLUZJNi1RMSZJbnZpc2libGVUaW1lcztGJ0ZDRkxGTkZQRlJGVEZWRlgvRmVuUSYwLjBlbUYnL0ZobkZocC1GLDYlRi4tRiM2Ji1GZG82JFEiM0YnRkNGPUZARkNGRUZkcC1GLDYlRi4tRiM2JkZjb0Y9RkBGQ0ZFRj1GQEZDLUYjNiYtRiM2MEZjb0Znby1GIzYmLUYsNiVGLi1GIzYmLUZkbzYkUSI0RidGQ0Y9RkBGQ0ZFRmRwRmpwRkNGZ28tRiM2Ji1GLDYlRi4tRiM2Ji1GZG82JFEiMkYnRkNGPUZARkNGRUZkcEZhcUZDRmdvRl1wRmdvLUYjNihGXXBGZHBGW3JGZHBGanBGQ0Znby1GIzYoRl1wRmRwRmRyRmRwRmFxRkNGZ28tRiM2JkZqcEZkcEZhcUZDRkNGPUZARkMvJS5saW5ldGhpY2tuZXNzR0Zmby8lK2Rlbm9tYWxpZ25HUSdjZW50ZXJGJy8lKW51bWFsaWduR0Zlcy8lKWJldmVsbGVkR0ZCRj1GQEZD">LyZJIkZHNiI2I0kkZ2VzR0YlKiosJiIiIkYqJkYkNiMiIiZGKkYqLDBGKkYqKiYmRiQ2IyIiJUYqJkYkNiMiIiRGKkYqKiYmRiQ2IyIiI0YqJkYkNiNGKkYqRipGK0YqKihGK0YqRjBGKkYzRipGKiooRitGKkY3RipGOkYqRioqJkYzRipGOkYqRiohIiJGM0YqRjpGKg==</Equation></Text-field>
</Output>
</Group>
</Worksheet>